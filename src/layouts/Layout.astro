---
import "../styles/globals.css";
import { ViewTransitions } from "astro:transitions";
import Sheet from "src/components/Sheet.svelte";
import { Menu } from "lucide-astro";
import Sparkles from "src/components/Sparkles.svelte";
import Button from "node_modules/bits-ui/dist/bits/button/components/button.svelte";

// things to fix:
/* 
-- see if I can add change streams on mongo db each time a universe or team change it changes everywhere else it's at.
-- add a shortcut to open the filter (ctrl + f) and a tooltip to the button of filter
- (I added one but I can't do zoom) add a library to see each image in the charactersImageDisplay.svelte component in fullscreen  
- some images are not displaying (because are from a CORS site i guess or webp files) :/
- dark mode toggling when changes page while using viewTransition (in the mean time I have just dark mode by default)
-- add history of each character 
- the > fall in weird places using prettier in vscode in astro files
*/

const currentPath = Astro.url.pathname;

interface Props {
  title: string;
  otherLinks?: {
    href: string;
    title: string;
  }[];
}

const { title, otherLinks } = Astro.props;

const links = [
  // {
  //   href: "/",
  //   title: "Home",
  // },
  {
    href: "/characters",
    title: "Characters",
  },
  {
    href: "/random_characters",
    title: "Random Characters",
  },
  {
    href: "/fight",
    title: "Fight",
  },
  {
    href: "/universes",
    title: "Universes",
  },
  {
    href: "/teams",
    title: "Teams",
  },
  {
    href: "/powers",
    title: "Powers",
  },
];

if (otherLinks) links.push(...otherLinks);
---

<html lang="en">
  <head>
    <ViewTransitions />
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="animate-fade">
    <div class="absolute inset-0 -z-10 min-h-screen" transition:persist>
      <Sparkles client:only />
    </div>

    <main class="w-[90vw] md:w-[80vw] mx-auto overflow-hidden">
      <nav
        class="flex items-center justify-between md:justify-start mx-auto py-4 gap-5"
      >
        <a href="/" class="flex gap-2">
          <p class="font-bold text-primary">ASTRO-CHARACTERS</p>
          <p class="animate-bounce">ðŸš€</p>
        </a>
        <div
          class={`items-center justify-between hidden md:flex w-full  md:w-auto`}
        >
          <menu
            class="flex flex-col p-4 md:p-0 mt-4 font-medium md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0"
          >
            {
              links.map((link) => (
                <li>
                  <Button
                    variant={"link"}
                    class="hover:underline text-foreground"
                  >
                    <a
                      href={link.href}
                      class={`block py-2 px-3 ${currentPath.includes(link.href) && title === link.title && "underline"}`}
                    >
                      {link.title}
                    </a>
                  </Button>
                </li>
              ))
            }
          </menu>
        </div>

        <div class="flex justify-center md:hidden">
          <Sheet ButtonClassName="" client:load>
            <Menu slot="trigger" className="w-full" />
            <div
              slot="content"
              class={`items-center justify-between flex w-full  md:w-auto`}
            >
              <menu
                class="flex flex-col p-4 md:p-0 mt-4 font-medium md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0"
              >
                {
                  links.map((link) => (
                    <li>
                      <Button variant={"link"} class="text-foreground">
                        <a
                          href={link.href}
                          class={`flex py-2 px-3 ${currentPath.includes(link.href) && title === link.title && "underline"}`}
                        >
                          {link.title}
                        </a>
                      </Button>
                    </li>
                  ))
                }
              </menu>
            </div>
          </Sheet>
        </div>
      </nav>

      <div class="mx-auto mb-10 md:mt-20" transition:animate="slide">
        <slot />
      </div>
    </main>
  </body>
</html>

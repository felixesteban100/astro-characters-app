---
import "../styles/globals.css";
import { ViewTransitions, slide } from "astro:transitions";
import Navbar from "src/components/Navbar.astro";
import Sparkles from "src/components/Sparkles.svelte";

// things to fix:
/* 
-- use the members array in the teams collection to update every character in the team adding to the characters documents the id of the team inside the array team and delete all the team strings after that
-- add objects collection with the following propertyes: name, description, universe, carriers (charactersIds) so that we can aggergate the characters using a $lookup later, the same with powers (array of powers values)
  - use chatGPT to populate the objects collection
  I could use this ones: 
  https://comicvine.gamespot.com/profile/van_cere/lists/dc-objects-items-and-artifacts/51733/
  https://www.cbr.com/marvel-powerful-weapons-fans-forgot-existed/
-- add a new page called objects where you display the documents from the objects collection

-- do the exact same but with places: 
  - create collection
  - create page
properties: name, description, universe, characters 



-- find a better way to animate images so that when they are not persinting to the other page they animate like the rest of the page because they are idle with this current config in the viewTransition API 
-- add a shortcut to open the filter (ctrl + f) and a tooltip to the button of filter
- (I added one but I can't do zoom) add a library to see each image in the charactersImageDisplay.svelte component in fullscreen  
- some images are not displaying (because are from a CORS site i guess or webp files) :/
- dark mode toggling when changes page while using viewTransition (in the mean time I have just dark mode by default)
-- add history of each character 
-- add leaders peroperty as an array to each team { name, id }[]
- configure the swap page transition so that they slide in the same order they are in the navbar
*/

const currentPath = Astro.url.pathname;

interface Props {
  title: string;
  otherLinks?: {
    href: string;
    title: string;
  }[];
}

const { title, otherLinks } = Astro.props;

const links = [
  {
    href: "/characters",
    title: "Characters",
  },
  {
    href: "/random_characters",
    title: "Random",
  },
  {
    href: "/fight",
    title: "1 vs 1",
  },
  // {
  //   href: "/team-fight",
  //   title: "some vs some",
  // },
  {
    href: "/universes",
    title: "Universes",
  },
  {
    href: "/teams",
    title: "Teams",
  },
  {
    href: "/powers",
    title: "Powers",
  },
];

if (otherLinks) links.push(...otherLinks);

// const anim = {
//   old: {
//     name: "fadeIn",
//     duration: "0.2s",
//     easing: "linear",
//     fillMode: "forwards",
//   },
//   new: {
//     name: "fadeOut",
//     duration: "0.3s",
//     easing: "linear",
//     fillMode: "backwards",
//   },
// };

// const myFade = {
//   forwards: anim,
//   backwards: anim,
// };
---

<!-- <script>
  let lastClick;
  addEventListener("click", (event) => (lastClick = event));

  console.log("lastClick", lastClick);
</script> -->
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions fallback="swap" />
  </head>
  <body class="animate-fade">
    <div class="absolute inset-0 -z-10 min-h-screen" transition:persist>
      <Sparkles client:only />
    </div>

    <main class="w-[90vw] md:w-[80vw] mx-auto overflow-hidden max-w-[1700px]">
      <Navbar title={title} currentPath={currentPath} links={links} />
      <div
        class={`mx-auto mb-10 hidden lg:block ${title !== "Welcome to Characters." ? "lg:mt-10" : "mt-5"}`}
      >
        <slot />
      </div>
      <div
        class={`mx-auto mb-10 block lg:hidden ${title !== "Welcome to Characters." ? "lg:mt-10" : "mt-5"}`}
      >
        <slot />
      </div>
    </main>
  </body>
</html>

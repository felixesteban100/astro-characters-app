---
import "../styles/globals.css";
import { ViewTransitions } from "astro:transitions";
import LoaderAstro from "src/components/LoaderAstro.astro";
import Navbar from "src/components/Navbar.astro";
import Sparkles from "src/components/Sparkles.svelte";
import "../styles/globals.css";
import { ModeWatcher } from "mode-watcher";

// things to fix:
// use https://fluid.tw/#installation
//  npm install -D fluid-tailwind

// and change all the sm: md: lg: xl: 2xl: ...

/* 
  - FEATURES
    - make a favorites page and let the user save ceirtain characters using localstorage under the hood [maybe this could help = https://stackoverflow.com/questions/75522603/multilanguage-astro-localstorage]

    - make each character_class to have a different color depending on the number range

    - make each power tier to have a certain color depending on the number range
  
    - when added to the character colleciton use the superhero_class in the character card

    - make the viewTransition API to not scrool on top before changing page?
    
    - add icons for each field in the appereance tan and biography tab (/character page)
    
    - add a new page called objects where you display the documents from the objects collection
    
    - add page for places where you display the documents from the places collection

    - (I added one but I can't do zoom) add a library to see each image in the charactersImageDisplay.svelte component in fullscreen  
      [https://www.npmjs.com/package/bigger-picture#options]
      [https://madewithsvelte.com/bigger-picture]
      maybe this one can work

    - some images are not displaying (because are from a CORS site i guess or webp files) :/

    - dark mode toggling when changes page while using viewTransition (in the mean time I have just dark mode by default)

    - configure the swap page transition so that they slide in the same order they are in the navbar
----------------------------------------------------
  POPULATE ALL THE ADDED PROPERTIES  

  - NEW PROPERTIES FOR CHARACTERS
    description (long string), 
    weaknesses (array of strings), 
    origin (long string), 
    enemies (array of characters ids/names)  
    logo[if i can find where to get all the logos of all the characters first] (url of the image store on the web and took it from marveldatabase/), 
    tier (ask chatgpt to rank them from 1 to 10), 
    character_class (it is calculated by ( INTELLIGENCE^1.3 + (STRENGTH*0.5 )^2 + (SPEED*0.5)^2 + DURABILITY^1.6 + (POWER + (SUPERPOWERS_SCORES*SPL))^2 + COMBAT^1.8 ) ^ TIER) 

    code used: 
    {
      $set: {
        'appearance.description': "",
        'weaknesses': [],
        'biography.origin': '',
        'connections.enemies': [],
        'logo': '',
        'tier': 0,
        'character_class': 0
      },
    }

  - NEW PROPERTIES FOR TEAMS
      leaders (as an array to each team { name, id }[])

----------------------------------------------------
  - NEW COLLECTION PLACES:
      name 
      description 
      universe
      characters 
      images 
      location

  - NEW COLLECTION OBJECTS:
      name, 
      description, 
      universe, 
  
      I could use this ones to begging: 
      https://comicvine.gamespot.com/profile/van_cere/lists/dc-objects-items-and-artifacts/51733/
      https://www.cbr.com/marvel-powerful-weapons-fans-forgot-existed/
  
*/

const currentPath = Astro.url.pathname;
interface Props {
  title?: string;
  otherLinks?: {
    href: string;
    title: string;
  }[];
}

const { title, otherLinks } = Astro.props;

const links = [
  {
    href: "/",
    title: "Welcome to Characters",
    icon: "Home",
  },
  {
    href: "/characters",
    title: "Characters",
    icon: "User",
  },
  // {
  //   href: "/team-fight",
  //   title: "some vs some",
  // },
  {
    href: "/universes",
    title: "Universes",
    icon: "MapPinned",
  },
  {
    href: "/teams",
    title: "Teams",
    icon: "Users",
  },
  {
    href: "/powers",
    title: "Powers",
    icon: "SmartphoneCharging",
  },
  {
    href: "/random_characters",
    title: "Random Characters",
    icon: "Users",
  },
  {
    href: "/compare",
    title: "Compare",
    icon: "GitCompareArrows",
  },
];

if (otherLinks) links.push(...otherLinks.map((c) => ({ ...c, icon: "User" })));

const anim = {
  old: {
    name: "translate-out",
    duration: "1s cubic-bezier(0.4, 0, 0.2, 1)",
    fillMode: "both",
    delay: "100ms",
    // direction: "reverse",
  },
  new: {
    name: "translate-in",
    duration: "1s cubic-bezier(0.4, 0, 0.2, 1)",
    fillMode: "both",
    delay: "500ms",
  },
};

const customTransition = {
  forwards: anim,
  backwards: anim,
};
---

<script is:inline>
  const isBrowser = typeof localStorage !== "undefined";
  const getThemePreference = () => {
    if (isBrowser && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (isBrowser) {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>
      {
        title
          ?.replace("(Characters)", "")
          ?.replace("(Teams)", "")
          ?.replace("(Compare)", "")
      }
    </title>
    <ViewTransitions fallback="swap" />
    <script src="../scripts/transitions.ts"></script>
  </head>
  <body>
    <ModeWatcher client:load />
    <div class="absolute inset-0 -z-10 min-h-screen" transition:persist>
      <Sparkles client:only />
    </div>

    <!-- sticky top-0 z-50  -->
    <div
      class="flex bg-secondary/50 backdrop-blur-md border-b border-foreground/10"
    >
      <Navbar
        title={title ?? ""}
        currentPath={currentPath}
        links={links}
        transition:animate="none"
        transition:name={`title-animation`}
      />
    </div>

    <main class="w-[90vw] md:w-[80vw] mx-auto overflow-hidden max-w-[1700px]">
      <div
        class={`mx-auto mb-10 ${title !== "Welcome to Characters." ? "mt-5 lg:mt-10" : "mt-5"} ${currentPath.includes("/compare") && "flex flex-col items-center"}`}
      >
        <div
          class="flex justify-between items-center w-full mb-5"
          transition:animate="none"
          transition:name={`title-animation`}
        >
          <p class="font-bold text-4xl">
            {
              title
                ?.replace("(Characters)", "")
                .replace("(Teams)", "")
                ?.replace("(Compare)", "")
            }
          </p>
          <div>
            <div id="actionDoer">
              <slot name="page_title_other_content" />
            </div>
            <LoaderAstro />
          </div>
        </div>
        <div
          transition:animate={customTransition}
          transition:name={`page-animation`}
        >
          <slot name="content" />
        </div>
      </div>
    </main>
  </body>
</html>

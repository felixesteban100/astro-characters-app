---
import { Button } from "$lib/components/ui/button";
import Sheet from "src/components/Sheet.svelte";
import {
  Menu,
  User,
  MapPinned,
  Users,
  SmartphoneCharging,
  GitCompareArrows,
} from "lucide-astro";
import LoaderAstro from "./LoaderAstro.astro";

interface Props {
  currentPath: string;
  title: string;
  links: {
    href: string;
    title: string;
    icon: string | undefined;
  }[];
}

const { currentPath, links, title } = Astro.props;
---

<nav
  class="flex items-center justify-between xl:justify-start w-[90vw] md:w-[80vw] max-w-[1700px] mx-auto py-4 gap-5"
>
  <!-- {
    currentPath === "/" ? (
      <p class="flex gap-2">
        &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
        &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
        &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
        &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      </p>
    ) : ( -->
  <!-- transition:name="astro-characters" -->
  <a href="/" class="flex gap-2">
    <img
      id="actionDoer"
      src="https://astro.build/assets/press/astro-logo-light-gradient.png"
      alt=""
      class="h-10 w-auto"
    />
    <LoaderAstro />
  </a>
  <!--  ) } -->
  <div class={`items-center justify-between hidden xl:flex w-full md:w-auto`}>
    <menu
      id="actionDoer"
      class="flex flex-col p-4 md:p-0 mt-4 font-medium md:space-x-8 rtl:space-x-reverse md:flex-row md:mt-0 md:border-0"
    >
      {
        links.map((link) => (
          <li>
            <Button
              variant={"ghost"}
              class={`text-foreground rounded-lg ${
                currentPath.includes(link.href) /* && title === link.title */
                  ? "font-extrabold text-primary"
                  : "font-extralight"
              }`}
            >
              <a href={link.href} class={`py-2 px-3 flex gap-2 items-center`}>
                {link.icon === "User" ? (
                  <User />
                ) : link.icon === "MapPinned" ? (
                  <MapPinned />
                ) : link.icon === "Users" ? (
                  <Users />
                ) : link.icon === "SmartphoneCharging" ? (
                  <SmartphoneCharging />
                ) : link.icon === "GitCompareArrows" ? (
                  <GitCompareArrows />
                ) : null}{" "}
                {link.title}
              </a>
            </Button>
          </li>
        ))
      }
    </menu>
  </div>

  <div class="flex justify-center xl:hidden">
    <Sheet
      variant={undefined}
      size={undefined}
      ButtonClassName=""
      buttonTriggerId={"navbar"}
      client:load
      from="navbar"
    >
      <Menu slot="trigger" className="w-full" />
      <div
        slot="content"
        class={`items-center justify-between flex w-full  md:w-auto`}
      >
        <menu class="flex flex-col p-4 md:p-0 mt-4 md:mt-0 md:border-0">
          {
            links.map((link) => (
              <a href={link.href} class={`flex  py-2 px-3 `}>
                <Button
                  variant={"ghost"}
                  class={`text-xl gap-2 text-foreground rounded-lg ${
                    currentPath.includes(
                      link.href,
                    ) /* && title === link.title */
                      ? "font-bold text-primary"
                      : "font-extralight"
                  }`}
                >
                  {link.icon === "User" ? (
                    <User />
                  ) : link.icon === "MapPinned" ? (
                    <MapPinned />
                  ) : link.icon === "Users" ? (
                    <Users />
                  ) : link.icon === "SmartphoneCharging" ? (
                    <SmartphoneCharging />
                  ) : link.icon === "GitCompareArrows" ? (
                    <GitCompareArrows />
                  ) : null}{" "}
                  {link.title}
                </Button>
              </a>
            ))
          }
        </menu>
      </div>
    </Sheet>
  </div>
</nav>

<!-- <li>
            <Button
              variant={"link"}
              class="hover:underline underline-offset-8 text-foreground"
            >
              <a
                href={link.href}
                class={`block py-2 px-3 ${currentPath.includes(link.href) /* && title === link.title */ && "underline"}`}
              >
                {link.title}
              </a>
            </Button>
          </li> -->

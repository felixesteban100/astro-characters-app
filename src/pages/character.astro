---
import Layout from "../layouts/Layout.astro";
import "../styles/globals.css";
import { collectionCharacters, collectionTeams } from "../lib/mongodb";
import Tabs from "src/components/Tabs.svelte";
import { joinTeam_universe_power_toCharacter } from "$lib/charactersUtils";
import CharacterCard from "src/components/characters_page/CharacterCard.astro";
import { ObjectId } from "mongodb";
import TeamCard from "src/components/team_page/TeamCard.astro";
import { getTeamAggregationOptions } from "$lib/constants/aggregations";

const id = Astro.url.searchParams.get("id");
const characterJoinTeamAndUniverse = await collectionCharacters
  .aggregate<CharacterWithJoinTeamUniversePower>(
    joinTeam_universe_power_toCharacter(
      { id: parseInt(id ?? "") },
      "id",
      "desc",
      0,
      1,
      [],
    ),
  )
  .toArray();

const selectedCharacter = characterJoinTeamAndUniverse[0];

const teamAggregationOptions = getTeamAggregationOptions(undefined);

const teamsJoinUniverse = await collectionTeams
  .aggregate<TeamWithJoinCharacterUniverse>([
    ...teamAggregationOptions,
    {
      $match: {
        name: {
          $in: selectedCharacter.connections.groupAffiliation.map(
            (c) => c.value,
          ),
        },
      },
    },
    { $unwind: "$universe" },
    { $sort: { [`_id`]: -1 } },
  ])
  .toArray();

if (!selectedCharacter) {
  return Astro.redirect(`/not-found`);
}
---

<Layout
  title={`${selectedCharacter?.name}`}
  otherLinks={[
    {
      href: `/compare?first=${selectedCharacter?.id}`,
      title: `Compare using ${selectedCharacter?.name}`,
    },
  ]}
>
  <div
    class="flex flex-col xl:flex-row justify-center items-center gap-16 w-full"
    slot="content"
  >
    <div class="flex flex-col justify-center items-start gap-5">
      <CharacterCard
        imageSizes={"h-[40rem] w-[40rem]"}
        c={selectedCharacter}
        showName={false}
        withTransitionName={true}
        withLink={false}
        otherClasses=""
      />
    </div>
    <div class="h-[44rem] w-full lg:w-[70%]">
      <Tabs
        characterInfo={selectedCharacter}
        publisherInfo={selectedCharacter.biography.publisher}
        teams={selectedCharacter.connections.groupAffiliation}
        character_added_by={new ObjectId(selectedCharacter._id).getTimestamp()}
        client:load
      >
        <div slot="teamsRenderedElements">
          {
            teamsJoinUniverse.map((c) => {
              return (
                <a
                  href={`/characters?universe=${selectedCharacter.biography.publisher.value}&team=${c.value}`}
                >
                  <TeamCard team={c} />
                </a>
              );
            })
          }
        </div>
      </Tabs>
    </div>
  </div>
</Layout>

{
  /* <button
              onclick={() =>
                navigate(
                  `/characters?universe=${selectedCharacter.biography.publisher.value}&team=${c.value}`,
                )
              }
              class="appearance-none"
            >
              <TeamCard team={c} />;
            </button> */
}

---
import { CHARACTERS_PER_PAGE } from "$lib/constants/constants";
import Pagination from "src/components/Pagination.svelte";
import { collectionPowers } from "../lib/mongodb";
import Layout from "src/layouts/Layout.astro";
import FilterPowers from "src/components/FilterPowers.svelte";
import { Filter } from "lucide-astro";

const currentPage = Astro.url.searchParams.get("currentPage") ?? "1";
const powerName = Astro.url.searchParams.get("powerName") ?? "";

const howManyPerPage = parseInt(
  Astro.url.searchParams.get("howManyPerPage") ??
    CHARACTERS_PER_PAGE.toString(),
);

const offset = (parseInt(currentPage) - 1) * CHARACTERS_PER_PAGE;

const query: { name?: { $in: RegExp[] } } = {};

if (powerName !== "")
  query.name = {
    $in: powerName.split(",").map((c) => {
      return new RegExp(c.trim(), "ig");
    }),
  };

const powers = await collectionPowers
  .find(query)
  .sort({ id: -1 })
  .limit(howManyPerPage)
  .skip(offset)
  .toArray();

const powersLenght = await collectionPowers.find(query).toArray();
---

<Layout title="Powers">
  <FilterPowers
    howManyPerPage={howManyPerPage}
    powerName={powerName}
    client:load
    slot="page_title_other_content"
  >
    <div class="flex gap-5" slot="trigger">
      <Filter />
      <span class="text-primary hidden lg:flex">|</span>
      <span>(Press T)</span>
    </div>
  </FilterPowers>

  <div class="flex flex-col items-center justify-center" slot="content">
    <div class="w-full grid 2xl:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-5">
      {
        powers.map((power) => {
          return (
            <div class="my-5 p-5 border rounded-md ">
              <a
                href={`/characters?power=${power.value}`}
                class="group/power flex flex-col justify-center items-center gap-5"
              >
                {power.img !== "" && (
                  <img
                    src={power.img}
                    height={500}
                    width={500}
                    alt={power.name}
                    class={`w-[20rem] h-[15rem] col-span-1 object-cover`}
                  />
                )}

                <p class="group-hover/power:underline">
                  <span class={`text-primary`}>{power.id}</span>-{power.name}
                </p>
              </a>
            </div>
          );
        })
      }
    </div>

    {
      powersLenght.length > CHARACTERS_PER_PAGE && (
        <Pagination
          currentPage={currentPage}
          url={`/powers?currentPage=`}
          countItems={powersLenght.length}
          howManyPerPage={CHARACTERS_PER_PAGE}
          client:only
        />
      )
    }
  </div>
</Layout>

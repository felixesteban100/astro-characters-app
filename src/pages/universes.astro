---
import { CHARACTERS_PER_PAGE } from "$lib/constants/constants";
import Pagination from "src/components/Pagination.svelte";
import { collectionUniverses } from "../lib/mongodb";
import Layout from "src/layouts/Layout.astro";
import Drawer from "src/components/Drawer.svelte";
import { ScrollArea } from "$lib/components/ui/scroll-area";

const currentPage = Astro.url.searchParams.get("currentPage") ?? "1";

const offset = (parseInt(currentPage) - 1) * CHARACTERS_PER_PAGE;

const aggregationOptions = [
  {
    $lookup: {
      from: "teams",
      localField: "teams",
      foreignField: "id",
      pipeline: [
        {
          $project: {
            members: 0,
            universe: 0,
            comics: 0,
          },
        },
      ],
      as: "teams",
    },
  },
  { $match: {} },
];

const universesLenght = await collectionUniverses
  .aggregate<UniverseWithJoinTeams>(aggregationOptions)
  .toArray();

const universesJoinTeams = await collectionUniverses
  .aggregate<UniverseWithJoinTeams>([
    ...aggregationOptions,
    { $sort: { [`_id`]: 1 } },
    { $skip: offset },
    { $limit: CHARACTERS_PER_PAGE },
  ])
  .toArray();
---

<Layout title="Universes">
  <div
    class="w-full grid 2xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-5 my-11 justify-center items-center"
    slot="content"
  >
    {
      universesJoinTeams.map((universe) => {
        return (
          <div class="flex flex-col justify-center items-center gap-5">
            {universe.logo !== "" && (
              <img
                src={universe.logo}
                height={500}
                width={500}
                alt={universe.name}
                class={`w-[20rem] h-auto col-span-1`}
              />
            )}
            <a href={`/characters?universe=${universe.value}`}>
              <p class="hover:underline">Go to {universe.name}</p>
            </a>

            <Drawer client:load>
              <p slot="trigger">More info</p>
              <div
                class="flex flex-col justify-center items-center gap-5 px-10"
                slot="content"
              >
                {universe.logo !== "" && (
                  <img
                    src={universe.logo}
                    height={500}
                    width={500}
                    alt={universe.name}
                    class={`w-[15rem] h-auto col-span-1`}
                  />
                )}
                <div class="flex flex-col justify-center gap-5 items-start max-w-[400px]">
                  <div class="flex justify-between items-center gap-5 w-full">
                    <p class="font-bold text-3xl">{universe.name}</p>
                    <img src={universe.logo} class="h-10 w-auto" alt="" />
                  </div>
                  <p>Replace this with a publisher description</p>
                  <div class="self-center">
                    <p class="font-medium mb-2">
                      teams (total = {universe.teams.length}):{" "}
                    </p>
                    <ScrollArea class="h-72" client:load>
                      <div class="w-full justify-center items-center grid grid-cols-3 gap-5">
                        {universe.teams.map((team) => {
                          if (team.value === "All") return;

                          return (
                            <div>
                              <img
                                src={team.logo}
                                alt=""
                                class="h-auto w-36 object-cover"
                              />
                              {team.name}
                            </div>
                          );
                        })}
                      </div>
                    </ScrollArea>
                  </div>
                </div>
              </div>
            </Drawer>
          </div>
        );
      })
    }
  </div>

  {
    universesLenght.length > CHARACTERS_PER_PAGE && (
      <Pagination
        currentPage={currentPage}
        url={`/universes?currentPage=`}
        countItems={universesLenght.length}
        howManyPerPage={CHARACTERS_PER_PAGE}
        client:only
      />
    )
  }
</Layout>

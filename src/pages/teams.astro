---
import { CHARACTERS_PER_PAGE } from "$lib/constants/constants";
import Pagination from "src/components/Pagination.svelte";
import { collectionTeams } from "../lib/mongodb";
import { getTeamAggregationOptions } from "../lib/constants/aggregations";
import Layout from "src/layouts/Layout.astro";
import Sheet from "src/components/Sheet.svelte";
import { Filter } from "lucide-astro";
import TeamCard from "src/components/team_page/TeamCard.astro";

const currentPage = Astro.url.searchParams.get("currentPage") ?? "1";
const universe = Astro.url.searchParams.get("universe") ?? "All";

const offset = (parseInt(currentPage) - 1) * CHARACTERS_PER_PAGE;

const teamAggregationOptions = getTeamAggregationOptions(universe);

const [teamsLenght, teamsJoinUniverse] = await Promise.all([
  collectionTeams
    .aggregate<TeamWithJoinCharacterUniverse>(teamAggregationOptions)
    .toArray(),
  collectionTeams
    .aggregate<TeamWithJoinCharacterUniverse>([
      ...teamAggregationOptions,
      { $unwind: "$universe" },
      { $sort: { [`_id`]: -1 } },
      { $skip: offset },
      { $limit: CHARACTERS_PER_PAGE },
    ])
    .toArray(),
]);

const universesWithTeams: string[] = ["Marvel Comics", "DC Comics", "Shueisha"];

function getTitle() {
  return universe !== "All" ? universe : "Teams";
}
---

<script>
  import { navigate } from "astro:transitions/client";

  class AstroChangeUniverseTeams extends HTMLElement {
    constructor() {
      super();
      const heartButton = this.querySelector("button")!;

      // Each time the button is clicked, update the count.
      heartButton.addEventListener("click", () => {
        navigate(`teams?universe=${heartButton.name}&currentPage=1`);
      });
    }
  }

  customElements.define(
    "astro--change-universe-teams",
    AstroChangeUniverseTeams,
  );
</script>

<Layout title={getTitle()}>
  <Sheet
    variant={undefined}
    size={undefined}
    client:load
    ButtonClassName=""
    slot="page_title_other_content"
    buttonTriggerId={"teamsFilter"}
    from="teams"
    side="right"
  >
    <div slot="trigger">
      <Filter />
    </div>

    <div slot="content">
      <div class="flex flex-col justify-center items-center gap-5 my-5">
        {
          universesWithTeams.map((uni) => (
            <astro--change-universe-teams class="w-fit">
              <button
                class={`${uni === universe ? "underline" : ""}`}
                name={uni}
              >
                {uni}
              </button>
            </astro--change-universe-teams>
          ))
        }
      </div>
    </div>
  </Sheet>

  <div class="flex flex-col items-center justify-center" slot="content">
    <div
      class="w-full grid 2xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-5 my-11 justify-center items-center"
    >
      {
        teamsJoinUniverse.map((team) => {
          return <TeamCard {team} />;
        })
      }
    </div>

    {
      teamsLenght.length > CHARACTERS_PER_PAGE && (
        <Pagination
          currentPage={currentPage}
          url={`/teams?universe=${universe}&currentPage=`}
          countItems={teamsLenght.length}
          howManyPerPage={CHARACTERS_PER_PAGE}
          client:only
        />
      )
    }
  </div>
</Layout>

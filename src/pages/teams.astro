---

import { CHARACTERS_PER_PAGE } from "$lib/constants/constants";
import Pagination from "src/components/Pagination.svelte";
import { collectionTeams } from "../lib/mongodb";
import Layout from "src/layouts/Layout.astro";

const currentPage = Astro.url.searchParams.get("currentPage") ?? "1";
const universe = Astro.url.searchParams.get("universe") ?? "All";

const offset = (parseInt(currentPage) - 1) * CHARACTERS_PER_PAGE;

const queryOptions = universe !== "All" ? { 'universe.value': universe } : { }

const teams = await collectionTeams.find(queryOptions).limit(CHARACTERS_PER_PAGE).skip(offset).toArray();

const teamsLenght = await collectionTeams.countDocuments(queryOptions);
---

<Layout title="Teams">
  {universe !== "All" && <p>{universe}</p>}
  <div class="w-full grid 2xl:grid-cols-4 md:grid-cols-3 grid-cols-2 gap-5">
    {
      teams.map((team) => {
        return (
          <div class="my-5 p-5 border rounded-md ">
            <a
                href={`/characters?universe=${team.universe.value}&team=${team.value}`}
                class="group/power flex flex-col justify-center items-center gap-5"
            >
                {team.img !== "" && <img
                    src={team.img}
                    height={500}
                    width={500}
                    alt={team.name}
                    class={`w-[20rem] h-[15rem] col-span-1 object-cover`}
                    transition:name={`media-image-${team.value}`}
                />}
                <p class="group-hover/power:underline">{team.name}</p>
                <p class="group-hover/power:underline">Universe: {team.universe.name}</p>
            </a>
          </div>
        );
      })
    }
  </div>

  {teamsLenght > CHARACTERS_PER_PAGE && 
    <Pagination
      currentPage={currentPage}
      url={`/teams?universe=${universe}&currentPage=`}
      countItems={teamsLenght}
      client:only
    />}
</Layout>